n_Ap=length(Ap_surv$surv_t1),
beta_Ap_dim=ncol(X_Ap),
X_Ap=X_Ap,
year_Ap=Ap_surv$year_index,
plot_Ap=Ap_surv$plot,
ind_Ap=Ap_surv$ind_index,
y_Er=Er_surv$surv_t1,
n_Er=length(Er_surv$surv_t1),
beta_Er_dim=ncol(X_Er),
X_Er=X_Er,
year_Er=Er_surv$year_index,
plot_Er=Er_surv$plot,
ind_Er=Er_surv$ind_index)
## stan model code
## rfx for year, plot, and individual
## individual was added because particularly for sparse ages the effects may be
## driven by single individuals that just keep living
surv.stan =
"
data {
int<lower=0> n_spp;
int<lower=0> n_years;
int<lower=0> n_plots;
int<lower=0> n_ind;
int<lower=0> n_Ap;
int<lower=0, upper=1> y_Ap[n_Ap];
int<lower=0> beta_Ap_dim;
matrix[n_Ap,beta_Ap_dim] X_Ap;
int<lower=0,upper=n_years> year_Ap[n_Ap];
int<lower=0,upper=n_plots> plot_Ap[n_Ap];
int<lower=0,upper=n_ind> ind_Ap[n_Ap];
int<lower=0> n_Er;
int<lower=0, upper=1> y_Er[n_Er];
int<lower=0> beta_Er_dim;
matrix[n_Er,beta_Er_dim] X_Er;
int<lower=0,upper=n_years> year_Er[n_Er];
int<lower=0,upper=n_plots> plot_Er[n_Er];
int<lower=0,upper=n_ind> ind_Er[n_Er];
}
parameters {
vector[beta_Ap_dim] beta_Ap;
vector[beta_Er_dim] beta_Er;
matrix[n_spp,n_years] alpha_y;
vector[n_plots] alpha_p;
vector[n_ind] alpha_i;
real<lower=0> sigma_year;
real<lower=0> sigma_plot;
real<lower=0> sigma_ind;
}
model {
beta_Ap ~ normal(-1,5);
beta_Er ~ normal(-1,5);
to_vector(alpha_y) ~ normal(0,sigma_year);
alpha_p ~ normal(0,sigma_plot);
alpha_i ~ normal(0,sigma_ind);
y_Ap ~ bernoulli_logit_glm(X_Ap,to_vector(alpha_y[1,year_Ap])+alpha_p[plot_Ap]+alpha_i[ind_Ap],beta_Ap);
y_Er ~ bernoulli_logit_glm(X_Er,to_vector(alpha_y[2,year_Er])+alpha_p[plot_Er]+alpha_i[ind_Er],beta_Er);
}
"
survival_model <- stan_model(model_code = surv.stan)
surv_fit<-sampling(survival_model,data = stan_dat,
chains=2,
#control = list(adapt_delta=0.99,stepsize=0.1),
iter=10000,thin=2,
pars = c("beta_Ap","beta_Er","sigma_year","sigma_plot"),
save_warmup=F)
## take each species as a data subset -- this helps keep track of the parameters
Ap_surv <- surv_data %>% filter(species=="AGPE") %>% droplevels()
X_Ap<-model.matrix(~as.factor(age_lump) * as.factor(endo_01),data=Ap_surv)
Er_surv <- surv_data %>% filter(species=="ELRI") %>% droplevels()
X_Er<-model.matrix(~as.factor(age_lump) * as.factor(endo_01),data=Er_surv)
stan_dat <- list(n_spp=2,
n_years=max(surv_data$year_index),
n_plots=max(surv_data$plot),
#n_ind=max(surv_data$ind_index),
y_Ap=Ap_surv$surv_t1,
n_Ap=length(Ap_surv$surv_t1),
beta_Ap_dim=ncol(X_Ap),
X_Ap=X_Ap,
year_Ap=Ap_surv$year_index,
plot_Ap=Ap_surv$plot,
#ind_Ap=Ap_surv$ind_index,
y_Er=Er_surv$surv_t1,
n_Er=length(Er_surv$surv_t1),
beta_Er_dim=ncol(X_Er),
X_Er=X_Er,
year_Er=Er_surv$year_index,
plot_Er=Er_surv$plot)
## stan model code
## rfx for year, plot, and individual
## individual was added because particularly for sparse ages the effects may be
## driven by single individuals that just keep living
surv.stan =
"
data {
int<lower=0> n_spp;
int<lower=0> n_years;
int<lower=0> n_plots;
int<lower=0> n_Ap;
int<lower=0, upper=1> y_Ap[n_Ap];
int<lower=0> beta_Ap_dim;
matrix[n_Ap,beta_Ap_dim] X_Ap;
int<lower=0,upper=n_years> year_Ap[n_Ap];
int<lower=0,upper=n_plots> plot_Ap[n_Ap];
int<lower=0> n_Er;
int<lower=0, upper=1> y_Er[n_Er];
int<lower=0> beta_Er_dim;
matrix[n_Er,beta_Er_dim] X_Er;
int<lower=0,upper=n_years> year_Er[n_Er];
int<lower=0,upper=n_plots> plot_Er[n_Er];
}
parameters {
vector[beta_Ap_dim] beta_Ap;
vector[beta_Er_dim] beta_Er;
matrix[n_spp,n_years] alpha_y;
vector[n_plots] alpha_p;
real<lower=0> sigma_year;
real<lower=0> sigma_plot;
}
model {
beta_Ap ~ normal(-1,5);
beta_Er ~ normal(-1,5);
to_vector(alpha_y) ~ normal(0,sigma_year);
alpha_p ~ normal(0,sigma_plot);
y_Ap ~ bernoulli_logit_glm(X_Ap,to_vector(alpha_y[1,year_Ap])+alpha_p[plot_Ap],beta_Ap);
y_Er ~ bernoulli_logit_glm(X_Er,to_vector(alpha_y[2,year_Er])+alpha_p[plot_Er],beta_Er);
}
"
survival_model <- stan_model(model_code = surv.stan)
surv_fit<-sampling(survival_model,data = stan_dat,
chains=2,
#control = list(adapt_delta=0.99,stepsize=0.1),
iter=10000,thin=2,
pars = c("beta_Ap","beta_Er","sigma_year","sigma_plot"),
save_warmup=F)
## wrangle parameter indices to get age- and endo-specific survival
## Agrostis perennans
Ap_par <- rstan::extract(surv_fit,pars="beta_Ap")
colnames(Ap_par$beta_Ap)<-colnames(X_Ap)
quantile_probs<-c(0.1,0.25,0.5,0.75,0.9)
age_limits %>% filter(species=="AGPE")## AGPE goes to lump age 6
Ap_em_surv <- invlogit(apply(cbind(Ap_par$beta_Ap[,"(Intercept)"],
Ap_par$beta_Ap[,"(Intercept)"]+Ap_par$beta_Ap[,"as.factor(age_lump)1"],
Ap_par$beta_Ap[,"(Intercept)"]+Ap_par$beta_Ap[,"as.factor(age_lump)2"],
Ap_par$beta_Ap[,"(Intercept)"]+Ap_par$beta_Ap[,"as.factor(age_lump)3"],
Ap_par$beta_Ap[,"(Intercept)"]+Ap_par$beta_Ap[,"as.factor(age_lump)4"],
Ap_par$beta_Ap[,"(Intercept)"]+Ap_par$beta_Ap[,"as.factor(age_lump)5"],
Ap_par$beta_Ap[,"(Intercept)"]+Ap_par$beta_Ap[,"as.factor(age_lump)6"]),
2,quantile,probs=quantile_probs))
Ap_ep_surv <- invlogit(apply(cbind(Ap_par$beta_Ap[,"(Intercept)"]+Ap_par$beta_Ap[,"as.factor(endo_01)1"],
Ap_par$beta_Ap[,"(Intercept)"]+Ap_par$beta_Ap[,"as.factor(endo_01)1"]+Ap_par$beta_Ap[,"as.factor(age_lump)1"]+Ap_par$beta_Ap[,"as.factor(age_lump)1:as.factor(endo_01)1"],
Ap_par$beta_Ap[,"(Intercept)"]+Ap_par$beta_Ap[,"as.factor(endo_01)1"]+Ap_par$beta_Ap[,"as.factor(age_lump)2"]+Ap_par$beta_Ap[,"as.factor(age_lump)2:as.factor(endo_01)1"],
Ap_par$beta_Ap[,"(Intercept)"]+Ap_par$beta_Ap[,"as.factor(endo_01)1"]+Ap_par$beta_Ap[,"as.factor(age_lump)3"]+Ap_par$beta_Ap[,"as.factor(age_lump)3:as.factor(endo_01)1"],
Ap_par$beta_Ap[,"(Intercept)"]+Ap_par$beta_Ap[,"as.factor(endo_01)1"]+Ap_par$beta_Ap[,"as.factor(age_lump)4"]+Ap_par$beta_Ap[,"as.factor(age_lump)4:as.factor(endo_01)1"],
Ap_par$beta_Ap[,"(Intercept)"]+Ap_par$beta_Ap[,"as.factor(endo_01)1"]+Ap_par$beta_Ap[,"as.factor(age_lump)5"]+Ap_par$beta_Ap[,"as.factor(age_lump)5:as.factor(endo_01)1"],
Ap_par$beta_Ap[,"(Intercept)"]+Ap_par$beta_Ap[,"as.factor(endo_01)1"]+Ap_par$beta_Ap[,"as.factor(age_lump)6"]+Ap_par$beta_Ap[,"as.factor(age_lump)6:as.factor(endo_01)1"]),
2,quantile,probs=c(0.1,0.25,0.5,0.75,0.9)))
## Elymus villosus
Er_par <- rstan::extract(surv_fit,pars="beta_Er")
colnames(Er_par$beta_Er)<-colnames(X_Er)
quantile_probs<-c(0.1,0.25,0.5,0.75,0.9)
age_limits %>% filter(species=="ELRI")## ELRI goes to lump age 6
Er_em_surv <- invlogit(apply(cbind(Er_par$beta_Er[,"(Intercept)"],
Er_par$beta_Er[,"(Intercept)"]+Er_par$beta_Er[,"as.factor(age_lump)1"],
Er_par$beta_Er[,"(Intercept)"]+Er_par$beta_Er[,"as.factor(age_lump)2"],
Er_par$beta_Er[,"(Intercept)"]+Er_par$beta_Er[,"as.factor(age_lump)3"],
Er_par$beta_Er[,"(Intercept)"]+Er_par$beta_Er[,"as.factor(age_lump)4"]),
2,quantile,probs=quantile_probs))
Er_ep_surv <- invlogit(apply(cbind(Er_par$beta_Er[,"(Intercept)"]+Er_par$beta_Er[,"as.factor(endo_01)1"],
Er_par$beta_Er[,"(Intercept)"]+Er_par$beta_Er[,"as.factor(endo_01)1"]+Er_par$beta_Er[,"as.factor(age_lump)1"]+Er_par$beta_Er[,"as.factor(age_lump)1:as.factor(endo_01)1"],
Er_par$beta_Er[,"(Intercept)"]+Er_par$beta_Er[,"as.factor(endo_01)1"]+Er_par$beta_Er[,"as.factor(age_lump)2"]+Er_par$beta_Er[,"as.factor(age_lump)2:as.factor(endo_01)1"],
Er_par$beta_Er[,"(Intercept)"]+Er_par$beta_Er[,"as.factor(endo_01)1"]+Er_par$beta_Er[,"as.factor(age_lump)3"]+Er_par$beta_Er[,"as.factor(age_lump)3:as.factor(endo_01)1"],
Er_par$beta_Er[,"(Intercept)"]+Er_par$beta_Er[,"as.factor(endo_01)1"]+Er_par$beta_Er[,"as.factor(age_lump)4"]+Er_par$beta_Er[,"as.factor(age_lump)4:as.factor(endo_01)1"]),
2,quantile,probs=c(0.1,0.25,0.5,0.75,0.9)))
plot(Er_surv$age_lump,Er_surv$surv_t1,type="n",xlab="Age group",ylab="Survival",
xlim=c(-0.5,6.5))
plot(Er_surv$age_lump,Er_surv$surv_t1,type="n",xlab="Age group",ylab="Survival",
xlim=c(-0.5,4.5))
points(jitter(Er_surv$age_lump[Er_surv$endo_01==0])-0.25,
jitter(Er_surv$surv_t1[Er_surv$endo_01==0],factor=0.1),col=alpha("tomato",0.25))
points(jitter(Er_surv$age_lump[Er_surv$endo_01==1])+0.25,
jitter(Er_surv$surv_t1[Er_surv$endo_01==1],factor=0.1),col=alpha("cornflowerblue",0.25))
points((0:4)-.1,Er_em_surv[3,1:5],pch=16,cex=2,col="tomato")
arrows((0:4)-.1,Er_em_surv[2,1:5],
(0:4)-.1,Er_em_surv[4,1:5],length=0,lwd=3,col="tomato")
arrows((0:4)-.1,Er_em_surv[1,1:5],
(0:4)-.1,Er_em_surv[5,1:5],length=0,lwd=1,col="tomato")
points((0:4)+.1,Er_ep_surv[3,1:5],pch=16,cex=2,col="cornflowerblue")
arrows((0:4)+.1,Er_ep_surv[2,1:5],
(0:4)+.1,Er_ep_surv[4,1:5],length=0,lwd=3,col="cornflowerblue")
arrows((0:4)+.1,Er_ep_surv[1,1:5],
(0:4)+.1,Er_ep_surv[5,1:5],length=0,lwd=1,col="cornflowerblue")
par(mfrow=c(1,2),mar=c(4,4,1,1))
plot(Ap_surv$age_lump,Ap_surv$surv_t1,type="n",xlab="Age group",ylab="Survival",
xlim=c(-0.5,6.5))
points(jitter(Ap_surv$age_lump[Ap_surv$endo_01==0])-0.25,
jitter(Ap_surv$surv_t1[Ap_surv$endo_01==0],factor=0.1),col=alpha("tomato",0.25))
points(jitter(Ap_surv$age_lump[Ap_surv$endo_01==1])+0.25,
jitter(Ap_surv$surv_t1[Ap_surv$endo_01==1],factor=0.1),col=alpha("cornflowerblue",0.25))
points((0:6)-.1,Ap_em_surv[3,1:7],pch=16,cex=2,col="tomato")
arrows((0:6)-.1,Ap_em_surv[2,1:7],
(0:6)-.1,Ap_em_surv[4,1:7],length=0,lwd=3,col="tomato")
arrows((0:6)-.1,Ap_em_surv[1,1:7],
(0:6)-.1,Ap_em_surv[5,1:7],length=0,lwd=1,col="tomato")
points((0:6)+.1,Ap_ep_surv[3,1:7],pch=16,cex=2,col="cornflowerblue")
arrows((0:6)+.1,Ap_ep_surv[2,1:7],
(0:6)+.1,Ap_ep_surv[4,1:7],length=0,lwd=3,col="cornflowerblue")
arrows((0:6)+.1,Ap_ep_surv[1,1:7],
(0:6)+.1,Ap_ep_surv[5,1:7],length=0,lwd=1,col="cornflowerblue")
plot(Er_surv$age_lump,Er_surv$surv_t1,type="n",xlab="Age group",ylab="Survival",
xlim=c(-0.5,4.5))
points(jitter(Er_surv$age_lump[Er_surv$endo_01==0])-0.25,
jitter(Er_surv$surv_t1[Er_surv$endo_01==0],factor=0.1),col=alpha("tomato",0.25))
points(jitter(Er_surv$age_lump[Er_surv$endo_01==1])+0.25,
jitter(Er_surv$surv_t1[Er_surv$endo_01==1],factor=0.1),col=alpha("cornflowerblue",0.25))
points((0:4)-.1,Er_em_surv[3,1:5],pch=16,cex=2,col="tomato")
arrows((0:4)-.1,Er_em_surv[2,1:5],
(0:4)-.1,Er_em_surv[4,1:5],length=0,lwd=3,col="tomato")
arrows((0:4)-.1,Er_em_surv[1,1:5],
(0:4)-.1,Er_em_surv[5,1:5],length=0,lwd=1,col="tomato")
points((0:4)+.1,Er_ep_surv[3,1:5],pch=16,cex=2,col="cornflowerblue")
arrows((0:4)+.1,Er_ep_surv[2,1:5],
(0:4)+.1,Er_ep_surv[4,1:5],length=0,lwd=3,col="cornflowerblue")
arrows((0:4)+.1,Er_ep_surv[1,1:5],
(0:4)+.1,Er_ep_surv[5,1:5],length=0,lwd=1,col="cornflowerblue")
getwd()
survival_model <- stan_model("Stan/ltreb_age_survival.stan")
survival_model <- stan_model("Stan\ltreb_age_survival.stan")
survival_model <- stan_model("Stan/ltreb_age_survival.stan")
getwd()
survival_model <- stan_model("analysis/Stan/ltreb_age_survival.stan")
surv_fit<-sampling(survival_model,data = stan_dat,
chains=2,
#control = list(adapt_delta=0.99,stepsize=0.1),
iter=10000,thin=2,
pars = c("beta_Ap","beta_Er","sigma_year","sigma_plot"),
save_warmup=F)
## wrangle parameter indices to get age- and endo-specific survival
## Agrostis perennans
Ap_par <- rstan::extract(surv_fit,pars="beta_Ap")
colnames(Ap_par$beta_Ap)<-colnames(X_Ap)
quantile_probs<-c(0.1,0.25,0.5,0.75,0.9)
age_limits %>% filter(species=="AGPE")## AGPE goes to lump age 6
Ap_em_surv <- invlogit(apply(cbind(Ap_par$beta_Ap[,"(Intercept)"],
Ap_par$beta_Ap[,"(Intercept)"]+Ap_par$beta_Ap[,"as.factor(age_lump)1"],
Ap_par$beta_Ap[,"(Intercept)"]+Ap_par$beta_Ap[,"as.factor(age_lump)2"],
Ap_par$beta_Ap[,"(Intercept)"]+Ap_par$beta_Ap[,"as.factor(age_lump)3"],
Ap_par$beta_Ap[,"(Intercept)"]+Ap_par$beta_Ap[,"as.factor(age_lump)4"],
Ap_par$beta_Ap[,"(Intercept)"]+Ap_par$beta_Ap[,"as.factor(age_lump)5"],
Ap_par$beta_Ap[,"(Intercept)"]+Ap_par$beta_Ap[,"as.factor(age_lump)6"]),
2,quantile,probs=quantile_probs))
Ap_ep_surv <- invlogit(apply(cbind(Ap_par$beta_Ap[,"(Intercept)"]+Ap_par$beta_Ap[,"as.factor(endo_01)1"],
Ap_par$beta_Ap[,"(Intercept)"]+Ap_par$beta_Ap[,"as.factor(endo_01)1"]+Ap_par$beta_Ap[,"as.factor(age_lump)1"]+Ap_par$beta_Ap[,"as.factor(age_lump)1:as.factor(endo_01)1"],
Ap_par$beta_Ap[,"(Intercept)"]+Ap_par$beta_Ap[,"as.factor(endo_01)1"]+Ap_par$beta_Ap[,"as.factor(age_lump)2"]+Ap_par$beta_Ap[,"as.factor(age_lump)2:as.factor(endo_01)1"],
Ap_par$beta_Ap[,"(Intercept)"]+Ap_par$beta_Ap[,"as.factor(endo_01)1"]+Ap_par$beta_Ap[,"as.factor(age_lump)3"]+Ap_par$beta_Ap[,"as.factor(age_lump)3:as.factor(endo_01)1"],
Ap_par$beta_Ap[,"(Intercept)"]+Ap_par$beta_Ap[,"as.factor(endo_01)1"]+Ap_par$beta_Ap[,"as.factor(age_lump)4"]+Ap_par$beta_Ap[,"as.factor(age_lump)4:as.factor(endo_01)1"],
Ap_par$beta_Ap[,"(Intercept)"]+Ap_par$beta_Ap[,"as.factor(endo_01)1"]+Ap_par$beta_Ap[,"as.factor(age_lump)5"]+Ap_par$beta_Ap[,"as.factor(age_lump)5:as.factor(endo_01)1"],
Ap_par$beta_Ap[,"(Intercept)"]+Ap_par$beta_Ap[,"as.factor(endo_01)1"]+Ap_par$beta_Ap[,"as.factor(age_lump)6"]+Ap_par$beta_Ap[,"as.factor(age_lump)6:as.factor(endo_01)1"]),
2,quantile,probs=c(0.1,0.25,0.5,0.75,0.9)))
## Elymus villosus
Er_par <- rstan::extract(surv_fit,pars="beta_Er")
colnames(Er_par$beta_Er)<-colnames(X_Er)
quantile_probs<-c(0.1,0.25,0.5,0.75,0.9)
age_limits %>% filter(species=="ELRI")## ELRI goes to lump age 4
Er_em_surv <- invlogit(apply(cbind(Er_par$beta_Er[,"(Intercept)"],
Er_par$beta_Er[,"(Intercept)"]+Er_par$beta_Er[,"as.factor(age_lump)1"],
Er_par$beta_Er[,"(Intercept)"]+Er_par$beta_Er[,"as.factor(age_lump)2"],
Er_par$beta_Er[,"(Intercept)"]+Er_par$beta_Er[,"as.factor(age_lump)3"],
Er_par$beta_Er[,"(Intercept)"]+Er_par$beta_Er[,"as.factor(age_lump)4"]),
2,quantile,probs=quantile_probs))
Er_ep_surv <- invlogit(apply(cbind(Er_par$beta_Er[,"(Intercept)"]+Er_par$beta_Er[,"as.factor(endo_01)1"],
Er_par$beta_Er[,"(Intercept)"]+Er_par$beta_Er[,"as.factor(endo_01)1"]+Er_par$beta_Er[,"as.factor(age_lump)1"]+Er_par$beta_Er[,"as.factor(age_lump)1:as.factor(endo_01)1"],
Er_par$beta_Er[,"(Intercept)"]+Er_par$beta_Er[,"as.factor(endo_01)1"]+Er_par$beta_Er[,"as.factor(age_lump)2"]+Er_par$beta_Er[,"as.factor(age_lump)2:as.factor(endo_01)1"],
Er_par$beta_Er[,"(Intercept)"]+Er_par$beta_Er[,"as.factor(endo_01)1"]+Er_par$beta_Er[,"as.factor(age_lump)3"]+Er_par$beta_Er[,"as.factor(age_lump)3:as.factor(endo_01)1"],
Er_par$beta_Er[,"(Intercept)"]+Er_par$beta_Er[,"as.factor(endo_01)1"]+Er_par$beta_Er[,"as.factor(age_lump)4"]+Er_par$beta_Er[,"as.factor(age_lump)4:as.factor(endo_01)1"]),
2,quantile,probs=c(0.1,0.25,0.5,0.75,0.9)))
## nice figure
par(mfrow=c(1,2),mar=c(4,4,1,1))
plot(Ap_surv$age_lump,Ap_surv$surv_t1,type="n",xlab="Age group",ylab="Survival",
xlim=c(-0.5,6.5))
points(jitter(Ap_surv$age_lump[Ap_surv$endo_01==0])-0.25,
jitter(Ap_surv$surv_t1[Ap_surv$endo_01==0],factor=0.1),col=alpha("tomato",0.25))
points(jitter(Ap_surv$age_lump[Ap_surv$endo_01==1])+0.25,
jitter(Ap_surv$surv_t1[Ap_surv$endo_01==1],factor=0.1),col=alpha("cornflowerblue",0.25))
points((0:6)-.1,Ap_em_surv[3,1:7],pch=16,cex=2,col="tomato")
arrows((0:6)-.1,Ap_em_surv[2,1:7],
(0:6)-.1,Ap_em_surv[4,1:7],length=0,lwd=3,col="tomato")
arrows((0:6)-.1,Ap_em_surv[1,1:7],
(0:6)-.1,Ap_em_surv[5,1:7],length=0,lwd=1,col="tomato")
points((0:6)+.1,Ap_ep_surv[3,1:7],pch=16,cex=2,col="cornflowerblue")
arrows((0:6)+.1,Ap_ep_surv[2,1:7],
(0:6)+.1,Ap_ep_surv[4,1:7],length=0,lwd=3,col="cornflowerblue")
arrows((0:6)+.1,Ap_ep_surv[1,1:7],
(0:6)+.1,Ap_ep_surv[5,1:7],length=0,lwd=1,col="cornflowerblue")
plot(Er_surv$age_lump,Er_surv$surv_t1,type="n",xlab="Age group",ylab="Survival",
xlim=c(-0.5,4.5))
points(jitter(Er_surv$age_lump[Er_surv$endo_01==0])-0.25,
jitter(Er_surv$surv_t1[Er_surv$endo_01==0],factor=0.1),col=alpha("tomato",0.25))
points(jitter(Er_surv$age_lump[Er_surv$endo_01==1])+0.25,
jitter(Er_surv$surv_t1[Er_surv$endo_01==1],factor=0.1),col=alpha("cornflowerblue",0.25))
points((0:4)-.1,Er_em_surv[3,1:5],pch=16,cex=2,col="tomato")
arrows((0:4)-.1,Er_em_surv[2,1:5],
(0:4)-.1,Er_em_surv[4,1:5],length=0,lwd=3,col="tomato")
arrows((0:4)-.1,Er_em_surv[1,1:5],
(0:4)-.1,Er_em_surv[5,1:5],length=0,lwd=1,col="tomato")
points((0:4)+.1,Er_ep_surv[3,1:5],pch=16,cex=2,col="cornflowerblue")
arrows((0:4)+.1,Er_ep_surv[2,1:5],
(0:4)+.1,Er_ep_surv[4,1:5],length=0,lwd=3,col="cornflowerblue")
arrows((0:4)+.1,Er_ep_surv[1,1:5],
(0:4)+.1,Er_ep_surv[5,1:5],length=0,lwd=1,col="cornflowerblue")
## toy simulation
## three levels of the fixed effect
invlogit<-function(x){exp(x)/(1+exp(x))}
Ev_surv <- surv_data %>% filter(species=="ELVI") %>% droplevels()
X_Ev<-model.matrix(~as.factor(age_lump) * as.factor(endo_01),data=Ev_surv)
levels(surv_data$species)
# survival model ----------------------------------------------------------
surv_data<-ltreb_age_lump %>% select(species,endo_01,id,plot,year_t,age,age_lump,surv_t1) %>% drop_na() %>%
mutate(species_index = as.numeric(species),
year_index = year_t-(min(year_t)-1),
endo_index = endo_01+1,
ind_index = as.numeric(factor(id)))
## take each species as a data subset -- this helps keep track of the parameters
Ap_surv <- surv_data %>% filter(species=="AGPE") %>% droplevels()
X_Ap<-model.matrix(~as.factor(age_lump) * as.factor(endo_01),data=Ap_surv)
Er_surv <- surv_data %>% filter(species=="ELRI") %>% droplevels()
X_Er<-model.matrix(~as.factor(age_lump) * as.factor(endo_01),data=Er_surv)
## we need a criterion for the max age that we will try to model
## before lumping tail ages as "old"
## for each species and endophyte status, what is the most advanced age
## with at least N observations?
N<-10
ltreb %>%
group_by(species,endo_01,age) %>%
summarise(count=n()) %>%
filter(count>=N) %>%
summarise(lump_age=max(age)+1) %>%
## if E+ and E- differ, use the younger age -- *controversial*
group_by(species) %>%
summarise(lump_age=min(lump_age))->age_limits
## create a new age variable that assigns a max age value for all ages over the lower sample size limit
## notice that while this ensures a sample size of N for max_age, then next older group may have < N
ltreb %>% left_join(.,age_limits,by=c("species")) %>%
mutate(age_lump=ifelse(age<lump_age,age,lump_age))->ltreb_age_lump
# survival model ----------------------------------------------------------
surv_data<-ltreb_age_lump %>% select(species,endo_01,id,plot,year_t,age,age_lump,surv_t1) %>% drop_na() %>%
mutate(species_index = as.numeric(species),
year_index = year_t-(min(year_t)-1),
endo_index = endo_01+1,
ind_index = as.numeric(factor(id)))
## take each species as a data subset -- this helps keep track of the parameters
Ap_surv <- surv_data %>% filter(species=="AGPE") %>% droplevels()
X_Ap<-model.matrix(~as.factor(age_lump) * as.factor(endo_01),data=Ap_surv)
Er_surv <- surv_data %>% filter(species=="ELRI") %>% droplevels()
X_Er<-model.matrix(~as.factor(age_lump) * as.factor(endo_01),data=Er_surv)
Ev_surv <- surv_data %>% filter(species=="ELVI") %>% droplevels()
X_Ev<-model.matrix(~as.factor(age_lump) * as.factor(endo_01),data=Ev_surv)
Fs_surv <- surv_data %>% filter(species=="FESU") %>% droplevels()
X_Fs<-model.matrix(~as.factor(age_lump) * as.factor(endo_01),data=Fs_surv)
Pa_surv <- surv_data %>% filter(species=="POAL") %>% droplevels()
X_Pa<-model.matrix(~as.factor(age_lump) * as.factor(endo_01),data=Pa_surv)
Pu_surv <- surv_data %>% filter(species=="POAU") %>% droplevels()
X_Pu<-model.matrix(~as.factor(age_lump) * as.factor(endo_01),data=Pu_surv)
Ps_surv <- surv_data %>% filter(species=="POSY") %>% droplevels()
X_Ps<-model.matrix(~as.factor(age_lump) * as.factor(endo_01),data=Ps_surv)
stan_dat <- list(n_spp=2,
n_years=max(surv_data$year_index),
n_plots=max(surv_data$plot),
#n_ind=max(surv_data$ind_index),
y_Ap=Ap_surv$surv_t1,
n_Ap=length(Ap_surv$surv_t1),
beta_Ap_dim=ncol(X_Ap),
X_Ap=X_Ap,
year_Ap=Ap_surv$year_index,
plot_Ap=Ap_surv$plot,
#ind_Ap=Ap_surv$ind_index,
y_Er=Er_surv$surv_t1,
n_Er=length(Er_surv$surv_t1),
beta_Er_dim=ncol(X_Er),
X_Er=X_Er,
year_Er=Er_surv$year_index,
plot_Er=Er_surv$plot)
stan_dat <- list(n_spp=7,
n_years=max(surv_data$year_index),
n_plots=max(surv_data$plot),
##AGPE
y_Ap=Ap_surv$surv_t1,
n_Ap=length(Ap_surv$surv_t1),
beta_Ap_dim=ncol(X_Ap),
X_Ap=X_Ap,
year_Ap=Ap_surv$year_index,
plot_Ap=Ap_surv$plot,
##ELRI
y_Er=Er_surv$surv_t1,
n_Er=length(Er_surv$surv_t1),
beta_Er_dim=ncol(X_Er),
X_Er=X_Er,
year_Er=Er_surv$year_index,
plot_Er=Er_surv$plot,
##ELVI
y_Ev=Ev_surv$surv_t1,
n_Ev=length(Ev_surv$surv_t1),
beta_Ev_dim=ncol(X_Ev),
X_Ev=X_Ev,
year_Ev=Ev_surv$year_index,
plot_Ev=Ev_surv$plot,
##FESU
y_Fs=Fs_surv$surv_t1,
n_Fs=length(Fs_surv$surv_t1),
beta_Fs_dim=ncol(X_Fs),
X_Fs=X_Fs,
year_Fs=Fs_surv$year_index,
plot_Fs=Fs_surv$plot,
##POAL
y_Pa=Pa_surv$surv_t1,
n_Pa=length(Pa_surv$surv_t1),
beta_Pa_dim=ncol(X_Pa),
X_Pa=X_Pa,
year_Pa=Pa_surv$year_index,
plot_Pa=Pa_surv$plot,
##POAU
y_Pu=Pu_surv$surv_t1,
n_Pu=length(Pu_surv$surv_t1),
beta_Pu_dim=ncol(X_Pu),
X_Pu=X_Pu,
year_Pu=Pu_surv$year_index,
plot_Pu=Pu_surv$plot,
##POAU
y_Ps=Ps_surv$surv_t1,
n_Ps=length(Ps_surv$surv_t1),
beta_Ps_dim=ncol(X_Ps),
X_Ps=X_Ps,
year_Ps=Ps_surv$year_index,
plot_Ps=Ps_surv$plot)
invlogit(-1)
invlogit(-6)
invlogit(4)
rm(stan_dat)
stan_dat_surv <- list(n_spp=7,
n_years=max(surv_data$year_index),
n_plots=max(surv_data$plot),
##AGPE
y_Ap=Ap_surv$surv_t1,
n_Ap=length(Ap_surv$surv_t1),
beta_Ap_dim=ncol(X_Ap),
X_Ap=X_Ap,
year_Ap=Ap_surv$year_index,
plot_Ap=Ap_surv$plot,
##ELRI
y_Er=Er_surv$surv_t1,
n_Er=length(Er_surv$surv_t1),
beta_Er_dim=ncol(X_Er),
X_Er=X_Er,
year_Er=Er_surv$year_index,
plot_Er=Er_surv$plot,
##ELVI
y_Ev=Ev_surv$surv_t1,
n_Ev=length(Ev_surv$surv_t1),
beta_Ev_dim=ncol(X_Ev),
X_Ev=X_Ev,
year_Ev=Ev_surv$year_index,
plot_Ev=Ev_surv$plot,
##FESU
y_Fs=Fs_surv$surv_t1,
n_Fs=length(Fs_surv$surv_t1),
beta_Fs_dim=ncol(X_Fs),
X_Fs=X_Fs,
year_Fs=Fs_surv$year_index,
plot_Fs=Fs_surv$plot,
##POAL
y_Pa=Pa_surv$surv_t1,
n_Pa=length(Pa_surv$surv_t1),
beta_Pa_dim=ncol(X_Pa),
X_Pa=X_Pa,
year_Pa=Pa_surv$year_index,
plot_Pa=Pa_surv$plot,
##POAU
y_Pu=Pu_surv$surv_t1,
n_Pu=length(Pu_surv$surv_t1),
beta_Pu_dim=ncol(X_Pu),
X_Pu=X_Pu,
year_Pu=Pu_surv$year_index,
plot_Pu=Pu_surv$plot,
##POAU
y_Ps=Ps_surv$surv_t1,
n_Ps=length(Ps_surv$surv_t1),
beta_Ps_dim=ncol(X_Ps),
X_Ps=X_Ps,
year_Ps=Ps_surv$year_index,
plot_Ps=Ps_surv$plot)
survival_model <- stan_model("analysis/Stan/ltreb_age_survival.stan")
survival_model <- stan_model("analysis/Stan/ltreb_age_survival.stan")
surv_fit<-sampling(survival_model,data = stan_dat_surv,
chains=3,
#control = list(adapt_delta=0.99,stepsize=0.1),
iter=10000,thin=2,
pars = c("beta_Ap","beta_Er",
"beta_Ev","beta_Fs",
"beta_Pa","beta_Pu",
"beta_Ps","sigma_year","sigma_plot"),
save_warmup=F)
surv_fit<-sampling(survival_model,data = stan_dat_surv,
chains=3,
#control = list(adapt_delta=0.99,stepsize=0.1),
iter=10000,thin=2,
pars = c("beta_Ap","beta_Er",
"beta_Ev","beta_Fs",
"beta_Pa","beta_Pu",
"beta_Ps","sigma_year","sigma_plot"),
save_warmup=F)
getwd()
write_rds(surv_fit,"analysis/Stan/surv_fit.rds")
